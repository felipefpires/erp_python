name: Security Scan

on:
  schedule:
    # Run every Monday at 9 AM UTC
    - cron: '0 9 * * 1'
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  security-scan:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.11"
        
    - name: Install security tools
      run: |
        python -m pip install --upgrade pip
        pip install bandit safety pip-audit
        
    - name: Run Bandit security scan
      run: |
        echo "Running Bandit security scan..."
        bandit -r app/ -f json -o bandit-report.json || true
        bandit -r app/ -f txt -o bandit-report.txt || true
        
    - name: Run Safety check
      run: |
        echo "Running Safety check for known vulnerabilities..."
        safety check --json --output safety-report.json || true
        safety check --output safety-report.txt || true
        
    - name: Run pip-audit
      run: |
        echo "Running pip-audit..."
        pip-audit --format json --output pip-audit-report.json || true
        pip-audit --format text --output pip-audit-report.txt || true
        
    - name: Upload security reports
      uses: actions/upload-artifact@v4
      with:
        name: security-reports-${{ github.run_number }}
        path: |
          bandit-report.json
          bandit-report.txt
          safety-report.json
          safety-report.txt
          pip-audit-report.json
          pip-audit-report.txt
        
    - name: Comment PR with security findings
      if: github.event_name == 'pull_request'
      uses: actions/github-script@v6
      with:
        script: |
          const fs = require('fs');
          
          let comment = '## ðŸ”’ Security Scan Results\n\n';
          
          // Read Bandit report
          if (fs.existsSync('bandit-report.txt')) {
            const banditContent = fs.readFileSync('bandit-report.txt', 'utf8');
            comment += '### Bandit Security Scan\n';
            comment += '```\n' + banditContent + '\n```\n\n';
          }
          
          // Read Safety report
          if (fs.existsSync('safety-report.txt')) {
            const safetyContent = fs.readFileSync('safety-report.txt', 'utf8');
            comment += '### Safety Check\n';
            comment += '```\n' + safetyContent + '\n```\n\n';
          }
          
          // Read pip-audit report
          if (fs.existsSync('pip-audit-report.txt')) {
            const pipAuditContent = fs.readFileSync('pip-audit-report.txt', 'utf8');
            comment += '### pip-audit\n';
            comment += '```\n' + pipAuditContent + '\n```\n\n';
          }
          
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: comment
          });

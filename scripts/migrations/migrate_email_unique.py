#!/usr/bin/env python3
"""
Script para migrar o banco de dados e remover a restri√ß√£o UNIQUE do campo email
"""

import sqlite3
import os

def migrate_email_unique():
    db_path = 'instance/erp.db'
    
    if not os.path.exists(db_path):
        print("‚ùå Banco de dados n√£o encontrado!")
        return False
    
    try:
        # Conectar ao banco
        conn = sqlite3.connect(db_path)
        cursor = conn.cursor()
        
        print("üîÑ Iniciando migra√ß√£o para remover restri√ß√£o UNIQUE do email...")
        
        # Verificar se a restri√ß√£o UNIQUE existe
        cursor.execute("PRAGMA index_list(customer)")
        indexes = cursor.fetchall()
        
        # Procurar por √≠ndice UNIQUE no email
        email_unique_index = None
        for index in indexes:
            index_name = index[1]
            if 'email' in index_name.lower() and 'unique' in index_name.lower():
                email_unique_index = index_name
                break
        
        if email_unique_index:
            print(f"üìã Encontrado √≠ndice UNIQUE: {email_unique_index}")
            
            # Remover o √≠ndice UNIQUE
            cursor.execute(f"DROP INDEX {email_unique_index}")
            print("‚úÖ √çndice UNIQUE removido com sucesso!")
        else:
            print("‚ÑπÔ∏è Nenhum √≠ndice UNIQUE encontrado para o campo email")
        
        # Commit das altera√ß√µes
        conn.commit()
        
        print("‚úÖ Migra√ß√£o conclu√≠da com sucesso!")
        return True
            
    except Exception as e:
        print(f"‚ùå Erro durante a migra√ß√£o: {e}")
        return False
    finally:
        if conn:
            conn.close()

if __name__ == "__main__":
    success = migrate_email_unique()
    if success:
        print("\nüéâ Migra√ß√£o conclu√≠da! A restri√ß√£o UNIQUE foi removida do campo email.")
    else:
        print("\nüí• Falha na migra√ß√£o. Verifique os erros acima.")


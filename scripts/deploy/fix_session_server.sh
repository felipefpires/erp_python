#!/bin/bash

# Script para corrigir problemas de sess√£o no servidor
# Execute este script no servidor Ubuntu

set -e

echo "üîß Corrigindo Problemas de Sess√£o no Servidor"
echo "============================================="

APP_DIR="/opt/erp-system"
ENV_FILE="$APP_DIR/.env"

# Verificar se est√° rodando como root
if [ "$EUID" -ne 0 ]; then
    echo "‚ùå Este script deve ser executado como root (use sudo)"
    exit 1
fi

# Verificar se o diret√≥rio da aplica√ß√£o existe
if [ ! -d "$APP_DIR" ]; then
    echo "‚ùå Diret√≥rio da aplica√ß√£o n√£o encontrado: $APP_DIR"
    exit 1
fi

echo "üìÅ Diret√≥rio da aplica√ß√£o: $APP_DIR"

# Fazer backup do arquivo .env atual
if [ -f "$ENV_FILE" ]; then
    cp "$ENV_FILE" "$ENV_FILE.backup.$(date +%Y%m%d_%H%M%S)"
    echo "‚úÖ Backup do arquivo .env criado"
fi

# Gerar nova SECRET_KEY
echo "üîë Gerando nova SECRET_KEY..."
NEW_SECRET_KEY=$(openssl rand -hex 32)
echo "   Nova SECRET_KEY: ${NEW_SECRET_KEY:0:20}..."

# Criar/atualizar arquivo .env
echo "‚öôÔ∏è Atualizando arquivo .env..."
cat > "$ENV_FILE" << EOF
FLASK_APP=app.py
FLASK_ENV=production
SECRET_KEY=$NEW_SECRET_KEY
DATABASE_URL=sqlite:////opt/erp-system/instance/erp.db
FLASK_DEBUG=False
SESSION_COOKIE_SECURE=False
SESSION_COOKIE_HTTPONLY=True
SESSION_COOKIE_SAMESITE=Lax
EOF

# Configurar permiss√µes
chown erp:erp "$ENV_FILE"
chmod 600 "$ENV_FILE"

echo "‚úÖ Arquivo .env atualizado com permiss√µes corretas"

# Verificar configura√ß√µes do Nginx
echo "üåê Verificando configura√ß√£o do Nginx..."
NGINX_CONFIG="/etc/nginx/sites-available/erp-system"

if [ -f "$NGINX_CONFIG" ]; then
    echo "‚úÖ Configura√ß√£o do Nginx encontrada"
    
    # Verificar se h√° configura√ß√µes de proxy para sess√µes
    if grep -q "proxy_set_header.*Host" "$NGINX_CONFIG"; then
        echo "‚úÖ Headers de proxy configurados"
    else
        echo "‚ö†Ô∏è Headers de proxy podem estar incompletos"
    fi
else
    echo "‚ùå Configura√ß√£o do Nginx n√£o encontrada"
fi

# Reiniciar servi√ßos
echo "üîÑ Reiniciando servi√ßos..."
systemctl restart erp-system
systemctl restart nginx

# Verificar status dos servi√ßos
echo "üìä Verificando status dos servi√ßos..."
sleep 3

if systemctl is-active --quiet erp-system; then
    echo "‚úÖ Servi√ßo ERP ativo"
else
    echo "‚ùå Servi√ßo ERP inativo"
    echo "   Verifique os logs: journalctl -u erp-system -n 50"
fi

if systemctl is-active --quiet nginx; then
    echo "‚úÖ Nginx ativo"
else
    echo "‚ùå Nginx inativo"
    echo "   Verifique os logs: journalctl -u nginx -n 50"
fi

# Testar conectividade
echo "üß™ Testando conectividade..."
if curl -s http://localhost/ > /dev/null; then
    echo "‚úÖ Aplica√ß√£o respondendo localmente"
else
    echo "‚ùå Aplica√ß√£o n√£o responde localmente"
fi

echo ""
echo "‚úÖ Corre√ß√£o de sess√£o conclu√≠da!"
echo ""
echo "üìã Pr√≥ximos passos:"
echo "1. Teste o login novamente no navegador"
echo "2. Se ainda houver problemas, verifique os logs:"
echo "   journalctl -u erp-system -f"
echo "3. Para verificar cookies:"
echo "   curl -c cookies.txt -b cookies.txt http://localhost/login"
echo ""
echo "üîß Comandos √∫teis:"
echo "   erp-manage status    - Ver status do sistema"
echo "   erp-manage logs      - Ver logs"
echo "   erp-manage restart   - Reiniciar sistema"
